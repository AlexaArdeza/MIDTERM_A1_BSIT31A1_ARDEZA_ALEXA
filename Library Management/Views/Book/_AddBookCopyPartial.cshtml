@model Library_Management.Models.AddBookCopyViewModel

<form id="addBookCopyForm" asp-action="AddCopy" method="post">
    <input type="hidden" asp-for="BookId" />

    <div class="mb-3">
        <label asp-for="CoverImageUrl" class="form-label">Cover Image URL</label>
        <input asp-for="CoverImageUrl" class="form-control" placeholder="Cover Image URL" />
    </div>

    <div class="mb-3">
        <label asp-for="Condition" class="form-label">Condition</label>
        <input asp-for="Condition" class="form-control" placeholder="Condition" />
    </div>

    <div class="mb-3">
        <label asp-for="Source" class="form-label">Source</label>
        <input asp-for="Source" class="form-control" placeholder="Source" />
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Add Copy</button>
    </div>
</form>

@section Scripts {
    <script>
        const form = document.getElementById('addBookCopyForm');
        if (form) {
            form.addEventListener('submit', function(e) {
                e.preventDefault(); // prevent normal page navigation
                const formData = new FormData(form);

                fetch(form.action, {
                    method: 'POST',
                    body: new URLSearchParams(formData)
                })
                .then(response => {
                    if (!response.ok) throw new Error('Failed to add copy.');

                    // close modal
                    const modalEl = document.getElementById('exampleModal');
                    const modal = bootstrap.Modal.getInstance(modalEl);
                    if (modal) modal.hide();

                    // refresh the page or book details inside modal
                    location.reload();
                })
                .catch(err => alert(err.message));
            });
        }
    </script>
}
